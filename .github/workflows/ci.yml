name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - qa
      - uat
      - prod
  pull_request:
    branches:
      - develop
      - qa
      - uat
      - prod

jobs:
  # Build and quality checks combined
  build-and-check:
    name: Build & Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Build Next.js application
        run: npm run build

      - name: TypeScript type check (post-build)
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build-output
          path: .next/
          retention-days: 7

  # Deploy to appropriate environment (placeholder)
  deploy:
    name: Deploy Status
    runs-on: ubuntu-latest
    needs: build-and-check
    if: github.event_name == 'push'
    steps:
      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "url=https://finarif.vercel.app" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
            echo "environment=uat" >> $GITHUB_OUTPUT
            echo "url=https://finarif-uat.vercel.app" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/qa" ]]; then
            echo "environment=qa" >> $GITHUB_OUTPUT
            echo "url=https://finarif-qa.vercel.app" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "environment=development" >> $GITHUB_OUTPUT
            echo "url=https://finarif-dev.vercel.app" >> $GITHUB_OUTPUT
          fi

      - name: Deployment Ready
        run: |
          echo "âœ… Build successful for ${{ steps.env.outputs.environment }}"
          echo "ðŸ“¦ Ready to deploy to: ${{ steps.env.outputs.url }}"
          echo ""
          echo "To deploy to Vercel:"
          echo "1. Connect repository at https://vercel.com/new"
          echo "2. Configure production branch as '${{ github.ref_name }}'"
          echo "3. Or add VERCEL_TOKEN secret and uncomment deployment step"
